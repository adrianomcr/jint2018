

import postman as CPPlib

from random import randrange
import pylab
import time

import time


N = 100

L = 0.6082
w_s = [0, 5, 0, 2]
nodes = []
nodesT = [[],[]]
for n in range(N):
    x = 5*randrange(0,1000,1)/1001.0
    y = 2*randrange(0,1000,1)/1001.0
    nodes.append([x, y])
    nodesT[0].append(x)
    nodesT[1].append(y)

pylab.figure(1)
pylab.plot(nodesT[0],nodesT[1],'b.',linewidth=3.0,markersize=20.0)
for n in range(N):
    pylab.text(nodes[n][0], nodes[n][1], str(n+1))
pylab.axis(w_s)



flag = [0 for i in range(len(nodes))]
list_edges = []
for i in range(len(nodes)):
    for j in range(i+1,len(nodes),1):
        dist = ((nodes[i][0]-nodes[j][0])**2+(nodes[i][1]-nodes[j][1])**2)**0.5
        if dist <= L:
            pylab.plot([nodes[i][0], nodes[j][0]], [nodes[i][1], nodes[j][1]], 'r--', linewidth=1.0)
            list_edges.append((i+1,j+1,dist))
            flag[i] = 1
            flag[j] = 1
for i in range(len(nodes)):
    if flag[i] == 0:
        list_edges.append((i + 1,  1, 0.2))


print 'len(list_edges): ', len(list_edges)

current_node = 10

elapsed = time.time()
solution = CPPlib.main_CPP(list_edges, current_node)
elapsed = time.time()-elapsed
print 'Elapsed time:', elapsed

print 'solution = ', solution


pylab.show()


#x = [(1, 2, 1.131370849898468), (2, 3, 7.3361384223035575), (3, 4, 2.355544420768263), (4, 5, 0.9333809511662676), (4, 6, 0.9505203353581168), (3, 7, 3.6403804052595428), (7, 8, 2.2691403937304666), (8, 9, 1.3403290183681096), (9, 10, 2.976774440449357), (10, 11, 1.7253405460951778), (10, 12, 0.8732582254996074), (12, 13, 1.1132723173648198), (13, 14, 1.0199999999999996), (14, 2, 4.29546647053325), (14, 15, 4.561880394134972), (15, 16, 3.365885447582392), (16, 17, 2.041801117840763), (17, 18, 1.4584764512172181), (18, 13, 2.242141365909643), (18, 19, 1.3010764773832477), (17, 20, 2.3102757181790485), (20, 21, 1.000899498079768), (21, 22, 1.6788930078365798), (23, 24, 2.1580685996857056), (24, 25, 1.0359016712456357), (24, 26, 1.046518036156062), (23, 27, 2.5344555431761755), (27, 28, 0.7000000000000064), (28, 29, 2.472727719591723), (29, 30, 4.294364580683157), (30, 31, 7.336138422303555), (31, 32, 2.37564396983485), (32, 33, 0.9333809511662692), (32, 34, 0.9505203353580923), (31, 35, 3.6403804052595423), (35, 36, 2.26914039373045), (36, 37, 1.3403290183681058), (37, 38, 2.976774440449363), (38, 39, 1.7253405460951838), (38, 40, 0.8732582254996074), (40, 41, 1.1132723173647918), (41, 29, 1.019999999999996), (41, 42, 2.263446678980871), (42, 43, 1.4621228069376768), (43, 44, 2.2802867454622056), (44, 45, 1.0008994980797619), (45, 46, 1.6855944801135136), (47, 48, 2.1575960534809058), (48, 49, 1.0359016712456743), (48, 50, 1.0595658211229881), (47, 51, 4.405873880124114), (51, 52, 3.5484162527562635), (52, 45, 1.6860302863052428), (52, 53, 2.709105084150863), (53, 43, 2.0418011178407625), (53, 54, 3.363378743494422), (54, 28, 2.270865629706999), (54, 55, 1.1879393923933803), (51, 56, 1.4142135623730967), (46, 57, 1.1781187090043694), (44, 58, 0.8202438661764235), (42, 59, 1.2918219515835239), (40, 60, 1.8667619023324757), (37, 61, 1.4142135623730985), (36, 62, 1.555634918610401), (30, 63, 1.1313708498984678), (27, 64, 2.1230312452885025), (64, 65, 3.526543622083784), (65, 21, 1.6860302863052503), (65, 16, 2.683077112999097), (64, 66, 1.414213562373089), (22, 67, 1.159655121145935), (20, 68, 0.8202438661764081), (15, 69, 1.1781187090043461), (12, 70, 1.8667619023324893), (9, 71, 1.4142135623730938), (8, 72, 1.5556349186104053), (22, 7, 2.288912444350267), (7, 23, 1.6400000000000023), (46, 35, 2.269716642892907), (35, 47, 1.6400000000000077)]
#t = time.time()
#solution = CPPlib.main_CPP(x)
#print 'elapsed time: ', time.time()-t
#print 'len(list_edges): ', len(x)
#print 'Solution = ', solution